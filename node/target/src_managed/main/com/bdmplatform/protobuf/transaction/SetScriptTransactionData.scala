// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.bdmplatform.protobuf.transaction

@SerialVersionUID(0L)
final case class SetScriptTransactionData(
    script: _root_.scala.Option[com.bdmplatform.protobuf.transaction.Script] = None
    ) extends scalapb.GeneratedMessage with scalapb.Message[SetScriptTransactionData] with scalapb.lenses.Updatable[SetScriptTransactionData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (script.isDefined) {
        val __value = script.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      script.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.bdmplatform.protobuf.transaction.SetScriptTransactionData = {
      var __script = this.script
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 18 =>
            __script = Option(_root_.scalapb.LiteParser.readMessage(_input__, __script.getOrElse(com.bdmplatform.protobuf.transaction.Script.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.bdmplatform.protobuf.transaction.SetScriptTransactionData(
          script = __script
      )
    }
    def getScript: com.bdmplatform.protobuf.transaction.Script = script.getOrElse(com.bdmplatform.protobuf.transaction.Script.defaultInstance)
    def clearScript: SetScriptTransactionData = copy(script = None)
    def withScript(__v: com.bdmplatform.protobuf.transaction.Script): SetScriptTransactionData = copy(script = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => script.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 2 => script.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.bdmplatform.protobuf.transaction.SetScriptTransactionData
}

object SetScriptTransactionData extends scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.SetScriptTransactionData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.SetScriptTransactionData] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.bdmplatform.protobuf.transaction.SetScriptTransactionData = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.bdmplatform.protobuf.transaction.SetScriptTransactionData(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.bdmplatform.protobuf.transaction.SetScriptTransactionData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.bdmplatform.protobuf.transaction.SetScriptTransactionData(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TransactionProto.javaDescriptor.getMessageTypes.get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TransactionProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.bdmplatform.protobuf.transaction.Script
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.bdmplatform.protobuf.transaction.SetScriptTransactionData(
  )
  implicit class SetScriptTransactionDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.SetScriptTransactionData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.bdmplatform.protobuf.transaction.SetScriptTransactionData](_l) {
    def script: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.Script] = field(_.getScript)((c_, f_) => c_.copy(script = Option(f_)))
    def optionalScript: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]] = field(_.script)((c_, f_) => c_.copy(script = f_))
  }
  final val SCRIPT_FIELD_NUMBER = 2
  def of(
    script: _root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]
  ): _root_.com.bdmplatform.protobuf.transaction.SetScriptTransactionData = _root_.com.bdmplatform.protobuf.transaction.SetScriptTransactionData(
    script
  )
}
