// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.bdmplatform.protobuf.transaction

@SerialVersionUID(0L)
final case class IssueTransactionData(
    name: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    amount: _root_.scala.Long = 0L,
    decimals: _root_.scala.Int = 0,
    reissuable: _root_.scala.Boolean = false,
    script: _root_.scala.Option[com.bdmplatform.protobuf.transaction.Script] = None
    ) extends scalapb.GeneratedMessage with scalapb.Message[IssueTransactionData] with scalapb.lenses.Updatable[IssueTransactionData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = description
        if (__value != "") {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = amount
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = decimals
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      
      {
        val __value = reissuable
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      if (script.isDefined) {
        val __value = script.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = description
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = amount
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = decimals
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      {
        val __v = reissuable
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      script.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.bdmplatform.protobuf.transaction.IssueTransactionData = {
      var __name = this.name
      var __description = this.description
      var __amount = this.amount
      var __decimals = this.decimals
      var __reissuable = this.reissuable
      var __script = this.script
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readString()
          case 18 =>
            __description = _input__.readString()
          case 24 =>
            __amount = _input__.readInt64()
          case 32 =>
            __decimals = _input__.readInt32()
          case 40 =>
            __reissuable = _input__.readBool()
          case 50 =>
            __script = Option(_root_.scalapb.LiteParser.readMessage(_input__, __script.getOrElse(com.bdmplatform.protobuf.transaction.Script.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.bdmplatform.protobuf.transaction.IssueTransactionData(
          name = __name,
          description = __description,
          amount = __amount,
          decimals = __decimals,
          reissuable = __reissuable,
          script = __script
      )
    }
    def withName(__v: _root_.scala.Predef.String): IssueTransactionData = copy(name = __v)
    def withDescription(__v: _root_.scala.Predef.String): IssueTransactionData = copy(description = __v)
    def withAmount(__v: _root_.scala.Long): IssueTransactionData = copy(amount = __v)
    def withDecimals(__v: _root_.scala.Int): IssueTransactionData = copy(decimals = __v)
    def withReissuable(__v: _root_.scala.Boolean): IssueTransactionData = copy(reissuable = __v)
    def getScript: com.bdmplatform.protobuf.transaction.Script = script.getOrElse(com.bdmplatform.protobuf.transaction.Script.defaultInstance)
    def clearScript: IssueTransactionData = copy(script = None)
    def withScript(__v: com.bdmplatform.protobuf.transaction.Script): IssueTransactionData = copy(script = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = amount
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = decimals
          if (__t != 0) __t else null
        }
        case 5 => {
          val __t = reissuable
          if (__t != false) __t else null
        }
        case 6 => script.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PString(description)
        case 3 => _root_.scalapb.descriptors.PLong(amount)
        case 4 => _root_.scalapb.descriptors.PInt(decimals)
        case 5 => _root_.scalapb.descriptors.PBoolean(reissuable)
        case 6 => script.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.bdmplatform.protobuf.transaction.IssueTransactionData
}

object IssueTransactionData extends scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.IssueTransactionData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.IssueTransactionData] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.bdmplatform.protobuf.transaction.IssueTransactionData = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.bdmplatform.protobuf.transaction.IssueTransactionData(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(3), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(4), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.get(__fields.get(5)).asInstanceOf[_root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.bdmplatform.protobuf.transaction.IssueTransactionData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.bdmplatform.protobuf.transaction.IssueTransactionData(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TransactionProto.javaDescriptor.getMessageTypes.get(12)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TransactionProto.scalaDescriptor.messages(12)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = com.bdmplatform.protobuf.transaction.Script
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.bdmplatform.protobuf.transaction.IssueTransactionData(
  )
  implicit class IssueTransactionDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.IssueTransactionData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.bdmplatform.protobuf.transaction.IssueTransactionData](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def amount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.amount)((c_, f_) => c_.copy(amount = f_))
    def decimals: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.decimals)((c_, f_) => c_.copy(decimals = f_))
    def reissuable: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.reissuable)((c_, f_) => c_.copy(reissuable = f_))
    def script: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.Script] = field(_.getScript)((c_, f_) => c_.copy(script = Option(f_)))
    def optionalScript: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]] = field(_.script)((c_, f_) => c_.copy(script = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val DESCRIPTION_FIELD_NUMBER = 2
  final val AMOUNT_FIELD_NUMBER = 3
  final val DECIMALS_FIELD_NUMBER = 4
  final val REISSUABLE_FIELD_NUMBER = 5
  final val SCRIPT_FIELD_NUMBER = 6
  def of(
    name: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    amount: _root_.scala.Long,
    decimals: _root_.scala.Int,
    reissuable: _root_.scala.Boolean,
    script: _root_.scala.Option[com.bdmplatform.protobuf.transaction.Script]
  ): _root_.com.bdmplatform.protobuf.transaction.IssueTransactionData = _root_.com.bdmplatform.protobuf.transaction.IssueTransactionData(
    name,
    description,
    amount,
    decimals,
    reissuable,
    script
  )
}
