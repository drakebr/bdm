// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.bdmplatform.protobuf.transaction

@SerialVersionUID(0L)
final case class DataTransactionData(
    data: _root_.scala.collection.Seq[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry] = _root_.scala.collection.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[DataTransactionData] with scalapb.lenses.Updatable[DataTransactionData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      data.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      data.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.bdmplatform.protobuf.transaction.DataTransactionData = {
      val __data = (_root_.scala.collection.immutable.Vector.newBuilder[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry] ++= this.data)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __data += _root_.scalapb.LiteParser.readMessage(_input__, com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      com.bdmplatform.protobuf.transaction.DataTransactionData(
          data = __data.result()
      )
    }
    def clearData = copy(data = _root_.scala.collection.Seq.empty)
    def addData(__vs: com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry*): DataTransactionData = addAllData(__vs)
    def addAllData(__vs: TraversableOnce[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry]): DataTransactionData = copy(data = data ++ __vs)
    def withData(__v: _root_.scala.collection.Seq[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry]): DataTransactionData = copy(data = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => data
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(data.map(_.toPMessage)(_root_.scala.collection.breakOut))
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.bdmplatform.protobuf.transaction.DataTransactionData
}

object DataTransactionData extends scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.DataTransactionData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.DataTransactionData] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.bdmplatform.protobuf.transaction.DataTransactionData = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.bdmplatform.protobuf.transaction.DataTransactionData(
      __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.bdmplatform.protobuf.transaction.DataTransactionData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.bdmplatform.protobuf.transaction.DataTransactionData(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TransactionProto.javaDescriptor.getMessageTypes.get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TransactionProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq[_root_.scalapb.GeneratedMessageCompanion[_]](
    _root_.com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry
  )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.bdmplatform.protobuf.transaction.DataTransactionData(
  )
  @SerialVersionUID(0L)
  final case class DataEntry(
      key: _root_.scala.Predef.String = "",
      value: com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.Empty
      ) extends scalapb.GeneratedMessage with scalapb.Message[DataEntry] with scalapb.lenses.Updatable[DataEntry] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (__value != "") {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.intValue.isDefined) {
          val __value = value.intValue.get
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(10, __value)
        };
        if (value.boolValue.isDefined) {
          val __value = value.boolValue.get
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, __value)
        };
        if (value.binaryValue.isDefined) {
          val __value = value.binaryValue.get
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(12, __value)
        };
        if (value.stringValue.isDefined) {
          val __value = value.stringValue.get
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(13, __value)
        };
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (__v != "") {
            _output__.writeString(1, __v)
          }
        };
        value.intValue.foreach { __v =>
          val __m = __v
          _output__.writeInt64(10, __m)
        };
        value.boolValue.foreach { __v =>
          val __m = __v
          _output__.writeBool(11, __m)
        };
        value.binaryValue.foreach { __v =>
          val __m = __v
          _output__.writeBytes(12, __m)
        };
        value.stringValue.foreach { __v =>
          val __m = __v
          _output__.writeString(13, __m)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry = {
        var __key = this.key
        var __value = this.value
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __key = _input__.readString()
            case 80 =>
              __value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.IntValue(_input__.readInt64())
            case 88 =>
              __value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BoolValue(_input__.readBool())
            case 98 =>
              __value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BinaryValue(_input__.readBytes())
            case 106 =>
              __value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.StringValue(_input__.readString())
            case tag => _input__.skipField(tag)
          }
        }
        com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry(
            key = __key,
            value = __value
        )
      }
      def withKey(__v: _root_.scala.Predef.String): DataEntry = copy(key = __v)
      def getIntValue: _root_.scala.Long = value.intValue.getOrElse(0L)
      def withIntValue(__v: _root_.scala.Long): DataEntry = copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.IntValue(__v))
      def getBoolValue: _root_.scala.Boolean = value.boolValue.getOrElse(false)
      def withBoolValue(__v: _root_.scala.Boolean): DataEntry = copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BoolValue(__v))
      def getBinaryValue: _root_.com.google.protobuf.ByteString = value.binaryValue.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      def withBinaryValue(__v: _root_.com.google.protobuf.ByteString): DataEntry = copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BinaryValue(__v))
      def getStringValue: _root_.scala.Predef.String = value.stringValue.getOrElse("")
      def withStringValue(__v: _root_.scala.Predef.String): DataEntry = copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.StringValue(__v))
      def clearValue: DataEntry = copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.Empty)
      def withValue(__v: com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value): DataEntry = copy(value = __v)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 10 => value.intValue.orNull
          case 11 => value.boolValue.orNull
          case 12 => value.binaryValue.orNull
          case 13 => value.stringValue.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 10 => value.intValue.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 11 => value.boolValue.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 12 => value.binaryValue.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 13 => value.stringValue.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry
  }
  
  object DataEntry extends scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry = {
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
        value = __fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[_root_.scala.Long]].map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.IntValue)
    .orElse[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value](__fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[_root_.scala.Boolean]].map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BoolValue))
    .orElse[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value](__fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[_root_.com.google.protobuf.ByteString]].map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BinaryValue))
    .orElse[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value](__fieldsMap.get(__fields.get(4)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.StringValue))
    .getOrElse(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.Empty)
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.IntValue)
    .orElse[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BoolValue))
    .orElse[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BinaryValue))
    .orElse[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.StringValue))
    .getOrElse(com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.Empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.bdmplatform.protobuf.transaction.DataTransactionData.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.bdmplatform.protobuf.transaction.DataTransactionData.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry(
    )
    sealed trait Value extends _root_.scalapb.GeneratedOneof {
      def isEmpty: _root_.scala.Boolean = false
      def isDefined: _root_.scala.Boolean = true
      def isIntValue: _root_.scala.Boolean = false
      def isBoolValue: _root_.scala.Boolean = false
      def isBinaryValue: _root_.scala.Boolean = false
      def isStringValue: _root_.scala.Boolean = false
      def intValue: _root_.scala.Option[_root_.scala.Long] = None
      def boolValue: _root_.scala.Option[_root_.scala.Boolean] = None
      def binaryValue: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = None
      def stringValue: _root_.scala.Option[_root_.scala.Predef.String] = None
    }
    object Value extends {
      @SerialVersionUID(0L)
      case object Empty extends com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value {
        type ValueType = _root_.scala.Nothing
        override def isEmpty: _root_.scala.Boolean = true
        override def isDefined: _root_.scala.Boolean = false
        override def number: _root_.scala.Int = 0
        override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
      }
    
      @SerialVersionUID(0L)
      final case class IntValue(value: _root_.scala.Long) extends com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value {
        type ValueType = _root_.scala.Long
        override def isIntValue: _root_.scala.Boolean = true
        override def intValue: _root_.scala.Option[_root_.scala.Long] = Some(value)
        override def number: _root_.scala.Int = 10
      }
      @SerialVersionUID(0L)
      final case class BoolValue(value: _root_.scala.Boolean) extends com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value {
        type ValueType = _root_.scala.Boolean
        override def isBoolValue: _root_.scala.Boolean = true
        override def boolValue: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
        override def number: _root_.scala.Int = 11
      }
      @SerialVersionUID(0L)
      final case class BinaryValue(value: _root_.com.google.protobuf.ByteString) extends com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value {
        type ValueType = _root_.com.google.protobuf.ByteString
        override def isBinaryValue: _root_.scala.Boolean = true
        override def binaryValue: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
        override def number: _root_.scala.Int = 12
      }
      @SerialVersionUID(0L)
      final case class StringValue(value: _root_.scala.Predef.String) extends com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value {
        type ValueType = _root_.scala.Predef.String
        override def isStringValue: _root_.scala.Boolean = true
        override def stringValue: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
        override def number: _root_.scala.Int = 13
      }
    }
    implicit class DataEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def intValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getIntValue)((c_, f_) => c_.copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.IntValue(f_)))
      def boolValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getBoolValue)((c_, f_) => c_.copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BoolValue(f_)))
      def binaryValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getBinaryValue)((c_, f_) => c_.copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.BinaryValue(f_)))
      def stringValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getStringValue)((c_, f_) => c_.copy(value = com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value.StringValue(f_)))
      def value: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val INT_VALUE_FIELD_NUMBER = 10
    final val BOOL_VALUE_FIELD_NUMBER = 11
    final val BINARY_VALUE_FIELD_NUMBER = 12
    final val STRING_VALUE_FIELD_NUMBER = 13
    def of(
      key: _root_.scala.Predef.String,
      value: com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry.Value
    ): _root_.com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry = _root_.com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry(
      key,
      value
    )
  }
  
  implicit class DataTransactionDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.DataTransactionData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.bdmplatform.protobuf.transaction.DataTransactionData](_l) {
    def data: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry]] = field(_.data)((c_, f_) => c_.copy(data = f_))
  }
  final val DATA_FIELD_NUMBER = 1
  def of(
    data: _root_.scala.collection.Seq[com.bdmplatform.protobuf.transaction.DataTransactionData.DataEntry]
  ): _root_.com.bdmplatform.protobuf.transaction.DataTransactionData = _root_.com.bdmplatform.protobuf.transaction.DataTransactionData(
    data
  )
}
