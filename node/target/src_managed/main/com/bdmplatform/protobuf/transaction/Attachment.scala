// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.bdmplatform.protobuf.transaction

@SerialVersionUID(0L)
final case class Attachment(
    attachment: com.bdmplatform.protobuf.transaction.Attachment.Attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[Attachment] with scalapb.lenses.Updatable[Attachment] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (attachment.intValue.isDefined) {
        val __value = attachment.intValue.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
      };
      if (attachment.boolValue.isDefined) {
        val __value = attachment.boolValue.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
      };
      if (attachment.binaryValue.isDefined) {
        val __value = attachment.binaryValue.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
      };
      if (attachment.stringValue.isDefined) {
        val __value = attachment.stringValue.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      attachment.intValue.foreach { __v =>
        val __m = __v
        _output__.writeInt64(1, __m)
      };
      attachment.boolValue.foreach { __v =>
        val __m = __v
        _output__.writeBool(2, __m)
      };
      attachment.binaryValue.foreach { __v =>
        val __m = __v
        _output__.writeBytes(3, __m)
      };
      attachment.stringValue.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.bdmplatform.protobuf.transaction.Attachment = {
      var __attachment = this.attachment
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.IntValue(_input__.readInt64())
          case 16 =>
            __attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.BoolValue(_input__.readBool())
          case 26 =>
            __attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.BinaryValue(_input__.readBytes())
          case 34 =>
            __attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.StringValue(_input__.readString())
          case tag => _input__.skipField(tag)
        }
      }
      com.bdmplatform.protobuf.transaction.Attachment(
          attachment = __attachment
      )
    }
    def getIntValue: _root_.scala.Long = attachment.intValue.getOrElse(0L)
    def withIntValue(__v: _root_.scala.Long): Attachment = copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.IntValue(__v))
    def getBoolValue: _root_.scala.Boolean = attachment.boolValue.getOrElse(false)
    def withBoolValue(__v: _root_.scala.Boolean): Attachment = copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.BoolValue(__v))
    def getBinaryValue: _root_.com.google.protobuf.ByteString = attachment.binaryValue.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withBinaryValue(__v: _root_.com.google.protobuf.ByteString): Attachment = copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.BinaryValue(__v))
    def getStringValue: _root_.scala.Predef.String = attachment.stringValue.getOrElse("")
    def withStringValue(__v: _root_.scala.Predef.String): Attachment = copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.StringValue(__v))
    def clearAttachment: Attachment = copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.Empty)
    def withAttachment(__v: com.bdmplatform.protobuf.transaction.Attachment.Attachment): Attachment = copy(attachment = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => attachment.intValue.orNull
        case 2 => attachment.boolValue.orNull
        case 3 => attachment.binaryValue.orNull
        case 4 => attachment.stringValue.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => attachment.intValue.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => attachment.boolValue.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => attachment.binaryValue.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => attachment.stringValue.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.bdmplatform.protobuf.transaction.Attachment
}

object Attachment extends scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.Attachment] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.Attachment] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.bdmplatform.protobuf.transaction.Attachment = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.bdmplatform.protobuf.transaction.Attachment(
      attachment = __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[_root_.scala.Long]].map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.IntValue)
    .orElse[com.bdmplatform.protobuf.transaction.Attachment.Attachment](__fieldsMap.get(__fields.get(1)).asInstanceOf[_root_.scala.Option[_root_.scala.Boolean]].map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.BoolValue))
    .orElse[com.bdmplatform.protobuf.transaction.Attachment.Attachment](__fieldsMap.get(__fields.get(2)).asInstanceOf[_root_.scala.Option[_root_.com.google.protobuf.ByteString]].map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.BinaryValue))
    .orElse[com.bdmplatform.protobuf.transaction.Attachment.Attachment](__fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[_root_.scala.Predef.String]].map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.StringValue))
    .getOrElse(com.bdmplatform.protobuf.transaction.Attachment.Attachment.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.bdmplatform.protobuf.transaction.Attachment] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.bdmplatform.protobuf.transaction.Attachment(
        attachment = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.IntValue)
    .orElse[com.bdmplatform.protobuf.transaction.Attachment.Attachment](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.BoolValue))
    .orElse[com.bdmplatform.protobuf.transaction.Attachment.Attachment](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.BinaryValue))
    .orElse[com.bdmplatform.protobuf.transaction.Attachment.Attachment](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(com.bdmplatform.protobuf.transaction.Attachment.Attachment.StringValue))
    .getOrElse(com.bdmplatform.protobuf.transaction.Attachment.Attachment.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TransactionProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TransactionProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.bdmplatform.protobuf.transaction.Attachment(
  )
  sealed trait Attachment extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isIntValue: _root_.scala.Boolean = false
    def isBoolValue: _root_.scala.Boolean = false
    def isBinaryValue: _root_.scala.Boolean = false
    def isStringValue: _root_.scala.Boolean = false
    def intValue: _root_.scala.Option[_root_.scala.Long] = None
    def boolValue: _root_.scala.Option[_root_.scala.Boolean] = None
    def binaryValue: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = None
    def stringValue: _root_.scala.Option[_root_.scala.Predef.String] = None
  }
  object Attachment extends {
    @SerialVersionUID(0L)
    case object Empty extends com.bdmplatform.protobuf.transaction.Attachment.Attachment {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class IntValue(value: _root_.scala.Long) extends com.bdmplatform.protobuf.transaction.Attachment.Attachment {
      type ValueType = _root_.scala.Long
      override def isIntValue: _root_.scala.Boolean = true
      override def intValue: _root_.scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class BoolValue(value: _root_.scala.Boolean) extends com.bdmplatform.protobuf.transaction.Attachment.Attachment {
      type ValueType = _root_.scala.Boolean
      override def isBoolValue: _root_.scala.Boolean = true
      override def boolValue: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class BinaryValue(value: _root_.com.google.protobuf.ByteString) extends com.bdmplatform.protobuf.transaction.Attachment.Attachment {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isBinaryValue: _root_.scala.Boolean = true
      override def binaryValue: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class StringValue(value: _root_.scala.Predef.String) extends com.bdmplatform.protobuf.transaction.Attachment.Attachment {
      type ValueType = _root_.scala.Predef.String
      override def isStringValue: _root_.scala.Boolean = true
      override def stringValue: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 4
    }
  }
  implicit class AttachmentLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.Attachment]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.bdmplatform.protobuf.transaction.Attachment](_l) {
    def intValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getIntValue)((c_, f_) => c_.copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.IntValue(f_)))
    def boolValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getBoolValue)((c_, f_) => c_.copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.BoolValue(f_)))
    def binaryValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getBinaryValue)((c_, f_) => c_.copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.BinaryValue(f_)))
    def stringValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getStringValue)((c_, f_) => c_.copy(attachment = com.bdmplatform.protobuf.transaction.Attachment.Attachment.StringValue(f_)))
    def attachment: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.Attachment.Attachment] = field(_.attachment)((c_, f_) => c_.copy(attachment = f_))
  }
  final val INT_VALUE_FIELD_NUMBER = 1
  final val BOOL_VALUE_FIELD_NUMBER = 2
  final val BINARY_VALUE_FIELD_NUMBER = 3
  final val STRING_VALUE_FIELD_NUMBER = 4
  def of(
    attachment: com.bdmplatform.protobuf.transaction.Attachment.Attachment
  ): _root_.com.bdmplatform.protobuf.transaction.Attachment = _root_.com.bdmplatform.protobuf.transaction.Attachment(
    attachment
  )
}
