// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.bdmplatform.protobuf.transaction

@SerialVersionUID(0L)
final case class InvokeScriptTransactionData(
    dApp: _root_.scala.Option[com.bdmplatform.protobuf.transaction.Recipient] = None,
    functionCall: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    payments: _root_.scala.collection.Seq[com.bdmplatform.protobuf.Amount] = _root_.scala.collection.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[InvokeScriptTransactionData] with scalapb.lenses.Updatable[InvokeScriptTransactionData] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (dApp.isDefined) {
        val __value = dApp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = functionCall
        if (__value != _root_.com.google.protobuf.ByteString.EMPTY) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      payments.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      dApp.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = functionCall
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(2, __v)
        }
      };
      payments.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData = {
      var __dApp = this.dApp
      var __functionCall = this.functionCall
      val __payments = (_root_.scala.collection.immutable.Vector.newBuilder[com.bdmplatform.protobuf.Amount] ++= this.payments)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __dApp = Option(_root_.scalapb.LiteParser.readMessage(_input__, __dApp.getOrElse(com.bdmplatform.protobuf.transaction.Recipient.defaultInstance)))
          case 18 =>
            __functionCall = _input__.readBytes()
          case 26 =>
            __payments += _root_.scalapb.LiteParser.readMessage(_input__, com.bdmplatform.protobuf.Amount.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData(
          dApp = __dApp,
          functionCall = __functionCall,
          payments = __payments.result()
      )
    }
    def getDApp: com.bdmplatform.protobuf.transaction.Recipient = dApp.getOrElse(com.bdmplatform.protobuf.transaction.Recipient.defaultInstance)
    def clearDApp: InvokeScriptTransactionData = copy(dApp = None)
    def withDApp(__v: com.bdmplatform.protobuf.transaction.Recipient): InvokeScriptTransactionData = copy(dApp = Option(__v))
    def withFunctionCall(__v: _root_.com.google.protobuf.ByteString): InvokeScriptTransactionData = copy(functionCall = __v)
    def clearPayments = copy(payments = _root_.scala.collection.Seq.empty)
    def addPayments(__vs: com.bdmplatform.protobuf.Amount*): InvokeScriptTransactionData = addAllPayments(__vs)
    def addAllPayments(__vs: TraversableOnce[com.bdmplatform.protobuf.Amount]): InvokeScriptTransactionData = copy(payments = payments ++ __vs)
    def withPayments(__v: _root_.scala.collection.Seq[com.bdmplatform.protobuf.Amount]): InvokeScriptTransactionData = copy(payments = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => dApp.orNull
        case 2 => {
          val __t = functionCall
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => payments
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => dApp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PByteString(functionCall)
        case 3 => _root_.scalapb.descriptors.PRepeated(payments.map(_.toPMessage)(_root_.scala.collection.breakOut))
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData
}

object InvokeScriptTransactionData extends scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[_root_.scala.Option[com.bdmplatform.protobuf.transaction.Recipient]],
      __fieldsMap.getOrElse(__fields.get(1), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[com.bdmplatform.protobuf.Amount]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.bdmplatform.protobuf.transaction.Recipient]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[com.bdmplatform.protobuf.Amount]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TransactionProto.javaDescriptor.getMessageTypes.get(18)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TransactionProto.scalaDescriptor.messages(18)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.bdmplatform.protobuf.transaction.Recipient
      case 3 => __out = com.bdmplatform.protobuf.Amount
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData(
  )
  implicit class InvokeScriptTransactionDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData](_l) {
    def dApp: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.transaction.Recipient] = field(_.getDApp)((c_, f_) => c_.copy(dApp = Option(f_)))
    def optionalDApp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.bdmplatform.protobuf.transaction.Recipient]] = field(_.dApp)((c_, f_) => c_.copy(dApp = f_))
    def functionCall: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.functionCall)((c_, f_) => c_.copy(functionCall = f_))
    def payments: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[com.bdmplatform.protobuf.Amount]] = field(_.payments)((c_, f_) => c_.copy(payments = f_))
  }
  final val D_APP_FIELD_NUMBER = 1
  final val FUNCTION_CALL_FIELD_NUMBER = 2
  final val PAYMENTS_FIELD_NUMBER = 3
  def of(
    dApp: _root_.scala.Option[com.bdmplatform.protobuf.transaction.Recipient],
    functionCall: _root_.com.google.protobuf.ByteString,
    payments: _root_.scala.collection.Seq[com.bdmplatform.protobuf.Amount]
  ): _root_.com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData = _root_.com.bdmplatform.protobuf.transaction.InvokeScriptTransactionData(
    dApp,
    functionCall,
    payments
  )
}
