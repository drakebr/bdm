// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.bdmplatform.protobuf.order

@SerialVersionUID(0L)
final case class Order(
    chainId: _root_.scala.Int = 0,
    senderPublicKey: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    matcherPublicKey: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    assetPair: _root_.scala.Option[com.bdmplatform.protobuf.order.AssetPair] = None,
    orderSide: com.bdmplatform.protobuf.order.Order.Side = com.bdmplatform.protobuf.order.Order.Side.BUY,
    amount: _root_.scala.Long = 0L,
    price: _root_.scala.Long = 0L,
    timestamp: _root_.scala.Long = 0L,
    expiration: _root_.scala.Long = 0L,
    matcherFee: _root_.scala.Option[com.bdmplatform.protobuf.Amount] = None,
    version: _root_.scala.Int = 0,
    proofs: _root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.collection.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[Order] with scalapb.lenses.Updatable[Order] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = chainId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = senderPublicKey
        if (__value != _root_.com.google.protobuf.ByteString.EMPTY) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      
      {
        val __value = matcherPublicKey
        if (__value != _root_.com.google.protobuf.ByteString.EMPTY) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
        }
      };
      if (assetPair.isDefined) {
        val __value = assetPair.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = orderSide
        if (__value != com.bdmplatform.protobuf.order.Order.Side.BUY) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value.value)
        }
      };
      
      {
        val __value = amount
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(6, __value)
        }
      };
      
      {
        val __value = price
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7, __value)
        }
      };
      
      {
        val __value = timestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(8, __value)
        }
      };
      
      {
        val __value = expiration
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(9, __value)
        }
      };
      if (matcherFee.isDefined) {
        val __value = matcherFee.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = version
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(11, __value)
        }
      };
      proofs.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(12, __value)
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = chainId
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = senderPublicKey
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(2, __v)
        }
      };
      {
        val __v = matcherPublicKey
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(3, __v)
        }
      };
      assetPair.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = orderSide
        if (__v != com.bdmplatform.protobuf.order.Order.Side.BUY) {
          _output__.writeEnum(5, __v.value)
        }
      };
      {
        val __v = amount
        if (__v != 0L) {
          _output__.writeInt64(6, __v)
        }
      };
      {
        val __v = price
        if (__v != 0L) {
          _output__.writeInt64(7, __v)
        }
      };
      {
        val __v = timestamp
        if (__v != 0L) {
          _output__.writeInt64(8, __v)
        }
      };
      {
        val __v = expiration
        if (__v != 0L) {
          _output__.writeInt64(9, __v)
        }
      };
      matcherFee.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = version
        if (__v != 0) {
          _output__.writeInt32(11, __v)
        }
      };
      proofs.foreach { __v =>
        val __m = __v
        _output__.writeBytes(12, __m)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.bdmplatform.protobuf.order.Order = {
      var __chainId = this.chainId
      var __senderPublicKey = this.senderPublicKey
      var __matcherPublicKey = this.matcherPublicKey
      var __assetPair = this.assetPair
      var __orderSide = this.orderSide
      var __amount = this.amount
      var __price = this.price
      var __timestamp = this.timestamp
      var __expiration = this.expiration
      var __matcherFee = this.matcherFee
      var __version = this.version
      val __proofs = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.com.google.protobuf.ByteString] ++= this.proofs)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __chainId = _input__.readInt32()
          case 18 =>
            __senderPublicKey = _input__.readBytes()
          case 26 =>
            __matcherPublicKey = _input__.readBytes()
          case 34 =>
            __assetPair = Option(_root_.scalapb.LiteParser.readMessage(_input__, __assetPair.getOrElse(com.bdmplatform.protobuf.order.AssetPair.defaultInstance)))
          case 40 =>
            __orderSide = com.bdmplatform.protobuf.order.Order.Side.fromValue(_input__.readEnum())
          case 48 =>
            __amount = _input__.readInt64()
          case 56 =>
            __price = _input__.readInt64()
          case 64 =>
            __timestamp = _input__.readInt64()
          case 72 =>
            __expiration = _input__.readInt64()
          case 82 =>
            __matcherFee = Option(_root_.scalapb.LiteParser.readMessage(_input__, __matcherFee.getOrElse(com.bdmplatform.protobuf.Amount.defaultInstance)))
          case 88 =>
            __version = _input__.readInt32()
          case 98 =>
            __proofs += _input__.readBytes()
          case tag => _input__.skipField(tag)
        }
      }
      com.bdmplatform.protobuf.order.Order(
          chainId = __chainId,
          senderPublicKey = __senderPublicKey,
          matcherPublicKey = __matcherPublicKey,
          assetPair = __assetPair,
          orderSide = __orderSide,
          amount = __amount,
          price = __price,
          timestamp = __timestamp,
          expiration = __expiration,
          matcherFee = __matcherFee,
          version = __version,
          proofs = __proofs.result()
      )
    }
    def withChainId(__v: _root_.scala.Int): Order = copy(chainId = __v)
    def withSenderPublicKey(__v: _root_.com.google.protobuf.ByteString): Order = copy(senderPublicKey = __v)
    def withMatcherPublicKey(__v: _root_.com.google.protobuf.ByteString): Order = copy(matcherPublicKey = __v)
    def getAssetPair: com.bdmplatform.protobuf.order.AssetPair = assetPair.getOrElse(com.bdmplatform.protobuf.order.AssetPair.defaultInstance)
    def clearAssetPair: Order = copy(assetPair = None)
    def withAssetPair(__v: com.bdmplatform.protobuf.order.AssetPair): Order = copy(assetPair = Option(__v))
    def withOrderSide(__v: com.bdmplatform.protobuf.order.Order.Side): Order = copy(orderSide = __v)
    def withAmount(__v: _root_.scala.Long): Order = copy(amount = __v)
    def withPrice(__v: _root_.scala.Long): Order = copy(price = __v)
    def withTimestamp(__v: _root_.scala.Long): Order = copy(timestamp = __v)
    def withExpiration(__v: _root_.scala.Long): Order = copy(expiration = __v)
    def getMatcherFee: com.bdmplatform.protobuf.Amount = matcherFee.getOrElse(com.bdmplatform.protobuf.Amount.defaultInstance)
    def clearMatcherFee: Order = copy(matcherFee = None)
    def withMatcherFee(__v: com.bdmplatform.protobuf.Amount): Order = copy(matcherFee = Option(__v))
    def withVersion(__v: _root_.scala.Int): Order = copy(version = __v)
    def clearProofs = copy(proofs = _root_.scala.collection.Seq.empty)
    def addProofs(__vs: _root_.com.google.protobuf.ByteString*): Order = addAllProofs(__vs)
    def addAllProofs(__vs: TraversableOnce[_root_.com.google.protobuf.ByteString]): Order = copy(proofs = proofs ++ __vs)
    def withProofs(__v: _root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]): Order = copy(proofs = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = chainId
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = senderPublicKey
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => {
          val __t = matcherPublicKey
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 4 => assetPair.orNull
        case 5 => {
          val __t = orderSide.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => {
          val __t = amount
          if (__t != 0L) __t else null
        }
        case 7 => {
          val __t = price
          if (__t != 0L) __t else null
        }
        case 8 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
        case 9 => {
          val __t = expiration
          if (__t != 0L) __t else null
        }
        case 10 => matcherFee.orNull
        case 11 => {
          val __t = version
          if (__t != 0) __t else null
        }
        case 12 => proofs
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(chainId)
        case 2 => _root_.scalapb.descriptors.PByteString(senderPublicKey)
        case 3 => _root_.scalapb.descriptors.PByteString(matcherPublicKey)
        case 4 => assetPair.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PEnum(orderSide.scalaValueDescriptor)
        case 6 => _root_.scalapb.descriptors.PLong(amount)
        case 7 => _root_.scalapb.descriptors.PLong(price)
        case 8 => _root_.scalapb.descriptors.PLong(timestamp)
        case 9 => _root_.scalapb.descriptors.PLong(expiration)
        case 10 => matcherFee.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => _root_.scalapb.descriptors.PInt(version)
        case 12 => _root_.scalapb.descriptors.PRepeated(proofs.map(_root_.scalapb.descriptors.PByteString)(_root_.scala.collection.breakOut))
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.bdmplatform.protobuf.order.Order
}

object Order extends scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.order.Order] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.bdmplatform.protobuf.order.Order] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): com.bdmplatform.protobuf.order.Order = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.bdmplatform.protobuf.order.Order(
      __fieldsMap.getOrElse(__fields.get(0), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(1), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(2), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.get(__fields.get(3)).asInstanceOf[_root_.scala.Option[com.bdmplatform.protobuf.order.AssetPair]],
      com.bdmplatform.protobuf.order.Order.Side.fromValue(__fieldsMap.getOrElse(__fields.get(4), com.bdmplatform.protobuf.order.Order.Side.BUY.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(5), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(6), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(7), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(8), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.get(__fields.get(9)).asInstanceOf[_root_.scala.Option[com.bdmplatform.protobuf.Amount]],
      __fieldsMap.getOrElse(__fields.get(10), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(11), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.bdmplatform.protobuf.order.Order] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.bdmplatform.protobuf.order.Order(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.bdmplatform.protobuf.order.AssetPair]]),
        com.bdmplatform.protobuf.order.Order.Side.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.bdmplatform.protobuf.order.Order.Side.BUY.scalaValueDescriptor).number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[com.bdmplatform.protobuf.Amount]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = OrderProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = OrderProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = com.bdmplatform.protobuf.order.AssetPair
      case 10 => __out = com.bdmplatform.protobuf.Amount
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => com.bdmplatform.protobuf.order.Order.Side
    }
  }
  lazy val defaultInstance = com.bdmplatform.protobuf.order.Order(
  )
  sealed trait Side extends _root_.scalapb.GeneratedEnum {
    type EnumType = Side
    def isBuy: _root_.scala.Boolean = false
    def isSell: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Side] = com.bdmplatform.protobuf.order.Order.Side
  }
  
  object Side extends _root_.scalapb.GeneratedEnumCompanion[Side] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Side] = this
    @SerialVersionUID(0L)
    case object BUY extends Side {
      val value = 0
      val index = 0
      val name = "BUY"
      override def isBuy: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object SELL extends Side {
      val value = 1
      val index = 1
      val name = "SELL"
      override def isSell: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends Side with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(BUY, SELL)
    def fromValue(value: _root_.scala.Int): Side = value match {
      case 0 => BUY
      case 1 => SELL
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.bdmplatform.protobuf.order.Order.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.bdmplatform.protobuf.order.Order.scalaDescriptor.enums(0)
  }
  implicit class OrderLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.order.Order]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.bdmplatform.protobuf.order.Order](_l) {
    def chainId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.chainId)((c_, f_) => c_.copy(chainId = f_))
    def senderPublicKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.senderPublicKey)((c_, f_) => c_.copy(senderPublicKey = f_))
    def matcherPublicKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.matcherPublicKey)((c_, f_) => c_.copy(matcherPublicKey = f_))
    def assetPair: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.order.AssetPair] = field(_.getAssetPair)((c_, f_) => c_.copy(assetPair = Option(f_)))
    def optionalAssetPair: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.bdmplatform.protobuf.order.AssetPair]] = field(_.assetPair)((c_, f_) => c_.copy(assetPair = f_))
    def orderSide: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.order.Order.Side] = field(_.orderSide)((c_, f_) => c_.copy(orderSide = f_))
    def amount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.amount)((c_, f_) => c_.copy(amount = f_))
    def price: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.price)((c_, f_) => c_.copy(price = f_))
    def timestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def expiration: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.expiration)((c_, f_) => c_.copy(expiration = f_))
    def matcherFee: _root_.scalapb.lenses.Lens[UpperPB, com.bdmplatform.protobuf.Amount] = field(_.getMatcherFee)((c_, f_) => c_.copy(matcherFee = Option(f_)))
    def optionalMatcherFee: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.bdmplatform.protobuf.Amount]] = field(_.matcherFee)((c_, f_) => c_.copy(matcherFee = f_))
    def version: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.version)((c_, f_) => c_.copy(version = f_))
    def proofs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]] = field(_.proofs)((c_, f_) => c_.copy(proofs = f_))
  }
  final val CHAIN_ID_FIELD_NUMBER = 1
  final val SENDER_PUBLIC_KEY_FIELD_NUMBER = 2
  final val MATCHER_PUBLIC_KEY_FIELD_NUMBER = 3
  final val ASSET_PAIR_FIELD_NUMBER = 4
  final val ORDER_SIDE_FIELD_NUMBER = 5
  final val AMOUNT_FIELD_NUMBER = 6
  final val PRICE_FIELD_NUMBER = 7
  final val TIMESTAMP_FIELD_NUMBER = 8
  final val EXPIRATION_FIELD_NUMBER = 9
  final val MATCHER_FEE_FIELD_NUMBER = 10
  final val VERSION_FIELD_NUMBER = 11
  final val PROOFS_FIELD_NUMBER = 12
  def of(
    chainId: _root_.scala.Int,
    senderPublicKey: _root_.com.google.protobuf.ByteString,
    matcherPublicKey: _root_.com.google.protobuf.ByteString,
    assetPair: _root_.scala.Option[com.bdmplatform.protobuf.order.AssetPair],
    orderSide: com.bdmplatform.protobuf.order.Order.Side,
    amount: _root_.scala.Long,
    price: _root_.scala.Long,
    timestamp: _root_.scala.Long,
    expiration: _root_.scala.Long,
    matcherFee: _root_.scala.Option[com.bdmplatform.protobuf.Amount],
    version: _root_.scala.Int,
    proofs: _root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]
  ): _root_.com.bdmplatform.protobuf.order.Order = _root_.com.bdmplatform.protobuf.order.Order(
    chainId,
    senderPublicKey,
    matcherPublicKey,
    assetPair,
    orderSide,
    amount,
    price,
    timestamp,
    expiration,
    matcherFee,
    version,
    proofs
  )
}
